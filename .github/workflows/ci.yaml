name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Validate:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Title
        run: |
          [[ "${{ github.event.pull_request.title }}" =~ ^[a-z]{1}[a-z/_-]*:\ [a-z]{1}.*[^.]$ ]]

  Bazel:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache/restore@v4
        id: restore-bazel-cache
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazel/disk
            ~/.cache/bazel/repository
            ~/.cache/bazelisk
          key: ${{ matrix.os }}-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ matrix.os}}-${{ env.cache-name }}-

      - name: Setup
        run: cp .github/workflows/ci.bazelrc .bazelrc.local

      - name: Build
        run: bazel build //...

      - name: Test
        run: bazel test //...

      # TODO: Test fuzzing targets
      # - name: Fuzz
      #   run: bazel build --config=fuzzing //...

      - uses: actions/cache/save@v4
        if: github.ref == 'refs/heads/main'
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazelisk
          key: ${{ steps.restore-bazel-cache.outputs.cache-primary-key }}
