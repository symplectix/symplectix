name: CI

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  ValidatePR:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Title
        run: |
          [[ "${{ github.event.pull_request.title }}" =~ ^[a-z]{1}[a-z/_-]*:\ [a-z]{1}.*[^.]$ ]]

  Testing:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        env:
          cache-name: bazel-cache
        with:
          path: |
            /tmp/ci
            ~/.cache/bazelisk
            ~/Library/Caches/bazelisk
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ env.cache-name }}-

      # The openssl out_lib_dir should be lib64 on a ubuntu-22.04 instance.
      # The default value is 'lib'.
      - name: Set environment variables
        run: |
          if [[ ${{ matrix.os }} == "ubuntu-22.04" ]]; then
            echo "BAZEL_COMMAND_ARGS=--@openssl//:out_lib_dir=lib64" >> $GITHUB_ENV
          else
            echo "BAZEL_COMMAND_ARGS=--@openssl//:out_lib_dir=lib" >> $GITHUB_ENV
          fi

      - name: Create .bazelrc for actions
        run: cp .github/bazelrc .bazelrc.local

      - name: Build
        run: bazel build --config=testing $BAZEL_COMMAND_ARGS //...

      - name: Test
        run: bazel test --config=testing $BAZEL_COMMAND_ARGS //...

      # TODO: Test fuzzing targets
      - name: Fuzz
        run: bazel build --config=fuzzing $BAZEL_COMMAND_ARGS //...
