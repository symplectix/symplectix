load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")

filegroup(
    name = "src",
    srcs = glob(
        include = ["**"],
        exclude = ["*.bazel"],
    ),
)

configure_make(
    name = "openssl",
    configure_command = "config",
    configure_in_place = True,
    configure_options = [
        "no-comp",
        "no-idea",
        "no-shared",
        "no-weak-ssl-ciphers",
    ],
    env = select({
        "@platforms//os:macos": {
            "AR": "",
            "PERL": "$$EXT_BUILD_ROOT$$/$(PERL)",
        },
        "//conditions:default": {
            "PERL": "$$EXT_BUILD_ROOT$$/$(PERL)",
        },
    }),
    lib_name = "openssl",
    lib_source = ":src",
    out_binaries = ["openssl"],
    out_lib_dir = select({
        "@platforms//os:linux": "lib64",
        "@platforms//os:macos": "lib",
        "//conditions:default": "@platforms//:incompatible",
    }),
    out_static_libs = [
        "libssl.a",
        "libcrypto.a",
    ],
    target_compatible_with = select({
        "@platforms//os:linux": [],
        "@platforms//os:macos": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    targets = [
        "build_programs",
        "install_sw",
    ],
    toolchains = ["@rules_perl//:current_toolchain"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "openssl_dir",
    srcs = [":openssl"],
    output_group = "gen_dir",
    visibility = ["//visibility:public"],
)

# runnable_binary(
#     name = "runnable_openssl",
#     binary = "openssl",
#     foreign_cc_target = "@openssl//:openssl",
# )
