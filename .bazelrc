# Bazel picks up host-OS-specific config lines from bazelrc files.
# https://bazel.build/reference/command-line-reference#flag--enable_platform_specific_config
common --enable_platform_specific_config

# If set to true, tags will be propagated from a target to the actions' execution requirements;
# otherwise tags are not propagated. See https://github.com/bazelbuild/bazel/issues/8830 for details.
# https://bazel.build/reference/command-line-reference#flag--experimental_allow_tags_propagation
common --experimental_allow_tags_propagation

# The option sandboxed causes commands to be executed inside a sandbox on the local machine.
# This requires that all input files, data dependencies and tools are listed as direct dependencies in the srcs, data and tools attributes.
# Bazel enables local sandboxing by default, on systems that support sandboxed execution.
# https://bazel.build/docs/user-manual#spawn-strategy
build --spawn_strategy=sandboxed

# If true, Bazel uses an environment with a static value for PATH and does not inherit LD_LIBRARY_PATH or TMPDIR.
# https://bazel.build/reference/command-line-reference#flag--incompatible_strict_action_env
build --incompatible_strict_action_env

# If set to true, each Linux sandbox will have its own dedicated empty directory mounted as /tmp rather than
# sharing /tmp with the host filesystem. Use --sandbox_add_mount_pair=/tmp to keep seeing the host's /tmp in all sandboxes.
# https://bazel.build/reference/command-line-reference#flag--incompatible_sandbox_hermetic_tmp
build --incompatible_sandbox_hermetic_tmp

# Restricts network access by default for actions.
# https://bazel.build/reference/command-line-reference#flag--sandbox_default_allow_network
build --nosandbox_default_allow_network

# Change the current hostname to 'localhost' for sandboxed actions.
# https://bazel.build/reference/command-line-reference#flag--sandbox_fake_hostname
build --sandbox_fake_hostname

# Change the current username to 'nobody' for sandboxed actions.
# https://bazel.build/reference/command-line-reference#flag--sandbox_fake_username
build --sandbox_fake_username

# rustc flags for proc-macros, cargo_build_script, etc.
build --@rules_rust//:extra_exec_rustc_flags=-Copt-level=3

# rust-analyzer
# Ensure rust source code is available to `rust-analyzer`.
build --repo_env=RULES_RUST_TOOLCHAIN_INCLUDE_RUSTC_SRCS=true

# rustfmt
# Run `bazel run @rules_rust//tools/rustfmt` to format.
build:rustfmt --aspects=@rules_rust//rust:defs.bzl%rustfmt_aspect
build:rustfmt --output_groups=+rustfmt_checks
build:rustfmt --@rules_rust//:rustfmt.toml=//:.rustfmt.toml

# clippy
build:clippy --aspects=@rules_rust//rust:defs.bzl%rust_clippy_aspect
build:clippy --output_groups=+clippy_checks
build:clippy --@rules_rust//:clippy.toml=//:.clippy.toml

try-import %workspace%/.bazelrc.user
