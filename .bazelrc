# To suppress symlink creation
# build --symlink_prefix=/
# build --symlink_prefix=.bazel/
# build --experimental_convenience_symlinks=ignore

--nosystem_rc
--nohome_rc
--workspace_rc

build --workspace_status_command=$(pwd)/tools/workspace_status.sh

# Make Bazel print out all options from rc files.
build --announce_rc

# Bazel picks up host-OS-specific config lines from bazelrc files.
# https://bazel.build/reference/command-line-reference#flag--enable_platform_specific_config
build --enable_platform_specific_config

# If set to true, tags will be propagated from a target to the actions' execution requirements;
# otherwise tags are not propagated. See https://github.com/bazelbuild/bazel/issues/8830 for details.
# https://bazel.build/reference/command-line-reference#flag--experimental_allow_tags_propagation
build --experimental_allow_tags_propagation

# If true, Bazel uses an environment with a static value for PATH and does not inherit LD_LIBRARY_PATH or TMPDIR.
# https://bazel.build/reference/command-line-reference#flag--incompatible_strict_action_env
build --incompatible_strict_action_env

# Restricts network access by default for actions.
# https://bazel.build/reference/command-line-reference#flag--sandbox_default_allow_network
build --nosandbox_default_allow_network

# Change the current hostname to 'localhost' for sandboxed actions.
# https://bazel.build/reference/command-line-reference#flag--sandbox_fake_hostname
build --sandbox_fake_hostname

# Change the current username to 'nobody' for sandboxed actions.
# https://bazel.build/reference/command-line-reference#flag--sandbox_fake_username
build --sandbox_fake_username

# Need to specify `-c dbg` or `-c fastbuild` to compile with debug mode
build --compilation_mode opt

# rust-analyzer
# Ensure rust source code is available to `rust-analyzer`.
build --repo_env=RULES_RUST_TOOLCHAIN_INCLUDE_RUSTC_SRCS=true

# rustfmt
# To format, run `bazel run @rules_rust//tools/rustfmt`.
# build --aspects=@rules_rust//rust:defs.bzl%rustfmt_aspect
# build --output_groups=+rustfmt_checks
build --@rules_rust//:rustfmt.toml=//build/rust:rustfmt.toml

# clippy
build --aspects=@rules_rust//rust:defs.bzl%rust_clippy_aspect
build --output_groups=+clippy_checks
build --@rules_rust//:clippy.toml=//build/rust:clippy.toml
