load("//fuzzing:defs.bzl", "rust_fuzz_test")

filegroup(
    name = "corpus_filegroup",
    srcs = glob([
        "corpus/corpus_0",
        "corpus/**",
    ]),
)

rust_fuzz_test(
    name = "should_not_fail",
    srcs = ["should_not_fail.rs"],
    corpus = glob(
        ["corpus/**/*"],
        allow_empty = False,
    ),
    tags = [
        "external",
        "manual",
    ],
    deps = [
        "@lib_crates//:arbitrary",
        "@lib_crates//:libfuzzer-sys",
    ],
)

rust_fuzz_test(
    name = "buffer_overflow",
    srcs = ["buffer_overflow.rs"],
    corpus = glob(
        ["corpus/**/*"],
        allow_empty = False,
    ),
    tags = [
        "external",
        "manual",
    ],
    deps = [
        "@lib_crates//:arbitrary",
        "@lib_crates//:libfuzzer-sys",
    ],
)

rust_fuzz_test(
    name = "use_after_scope",
    srcs = ["use_after_scope.rs"],
    corpus = glob(
        ["corpus/**/*"],
        allow_empty = False,
    ),
    tags = [
        "external",
        "manual",
    ],
    deps = [
        "@lib_crates//:arbitrary",
        "@lib_crates//:libfuzzer-sys",
    ],
)

rust_fuzz_test(
    name = "memory_leaks",
    srcs = ["memory_leaks.rs"],
    corpus = glob(
        ["corpus/**/*"],
        allow_empty = False,
    ),
    envs = {
        "ASAN_OPTIONS": ":".join([
            "detect_leaks=1",
            "detect_stack_use_after_return=1",
        ]),
    },
    tags = [
        "external",
        "manual",
    ],
    deps = [
        "@lib_crates//:arbitrary",
        "@lib_crates//:libfuzzer-sys",
    ],
)
