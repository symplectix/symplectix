load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_doc_test", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "entrypoint",
    srcs = glob(
        ["src/**/*.rs"],
        exclude = [
            "src/main.rs",
            "src/bin/**/*",
        ],
    ),
    # will not work as expected on windows
    target_compatible_with = select({
        "@platforms//os:linux": [],
        "@platforms//os:macos": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [
        "//process/entrypoint/fsutil",
        "@crates//:anyhow",
        "@crates//:clap",
        "@crates//:futures",
        "@crates//:humantime",
        "@crates//:libc",
        "@crates//:thiserror",
        "@crates//:tokio",
        "@crates//:tracing",
    ],
)

rust_binary(
    name = "coordinator",
    srcs = ["src/bin/coordinator.rs"],
    deps = [
        ":entrypoint",
        "//process/entrypoint/fsutil",
        "@crates//:anyhow",
        "@crates//:clap",
        "@crates//:futures",
        "@crates//:tokio",
        "@crates//:tracing",
        "@crates//:tracing-subscriber",
    ],
)

rust_test(
    name = "entrypoint_unit_test",
    size = "small",
    crate = ":entrypoint",
    deps = [
        "//testing",
    ],
)

rust_doc_test(
    name = "entrypoint_doc_test",
    size = "small",
    crate = ":entrypoint",
)
