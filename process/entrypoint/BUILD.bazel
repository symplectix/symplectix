load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_doc_test", "rust_library", "rust_test")

rust_library(
    name = "entrypoint_rs",
    srcs = glob(
        ["*.rs"],
        exclude = ["*_test.rs"],
    ),
    crate_name = "entrypoint",
    crate_root = "entrypoint.rs",
    # will not work as expected on windows
    target_compatible_with = select({
        "@platforms//os:linux": [],
        "@platforms//os:macos": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//process/fsutil:fsutil_rs",
        "@crates//:anyhow",
        "@crates//:clap",
        "@crates//:humantime",
        "@crates//:libc",
        "@crates//:thiserror",
        "@crates//:tokio",
        "@crates//:tracing",
    ],
)

rust_test(
    name = "entrypoint_rs_lib_test",
    size = "small",
    crate = ":entrypoint_rs",
    deps = [
        "//testing:testing_rs",
    ],
)

rust_doc_test(
    name = "entrypoint_rs_doc_test",
    size = "small",
    crate = ":entrypoint_rs",
)

rust_binary(
    name = "coordinator",
    srcs = ["cmd/coordinator.rs"],
    deps = [
        ":entrypoint_rs",
        "//process/fsutil:fsutil_rs",
        "@crates//:anyhow",
        "@crates//:clap",
        "@crates//:futures",
        "@crates//:tokio",
        "@crates//:tracing",
        "@crates//:tracing-subscriber",
    ],
)

cc_binary(
    name = "orphan",
    srcs = ["orphan.c"],
)

cc_binary(
    name = "zombie",
    srcs = ["zombie.c"],
)

pkg_tar(
    name = "coordinator_tar",
    srcs = [
        ":coordinator",
        ":orphan",
        ":zombie",
    ],
)

oci_image(
    name = "coordinator_image",
    base = "@distroless_cc_nonroot",
    entrypoint = ["/coordinator"],
    target_compatible_with = [
        "@platforms//os:linux",
    ],
    tars = [
        ":coordinator_tar",
    ],
)

# To load on macOS:
#
#     devcontainer exec --workspace-folder $(bazel info workspace) bazel run //process/entrypoint:load_coordinator_image
oci_load(
    name = "load_coordinator_image",
    image = ":coordinator_image",
    repo_tags = [package_name() + ":coordinator_image"],
)

container_structure_test(
    name = "coordinator_test",
    configs = ["testdata/coordinator_test.yaml"],
    image = ":coordinator_image",
    target_compatible_with = [
        "@platforms//os:linux",
    ],
)
